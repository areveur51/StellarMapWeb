"""
Django settings for django_project project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from decouple import config
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-4ju2n@$f9d0c=h)_g0lbb%k9&@rf(xa$d$g$&5ri$uf)*gev^4'
SECRET_KEY = config('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['127.0.0.1', 'localhost'] + (os.environ.get("REPLIT_DOMAINS", "").split(',') if os.environ.get("REPLIT_DOMAINS") else [])
CSRF_TRUSTED_ORIGINS = [
    "https://" + domain for domain in os.environ.get("REPLIT_DOMAINS", "").split(',') if os.environ.get("REPLIT_DOMAINS")
]

# Application definition

# Cassandra Configuration
CASSANDRA_KEYSPACE = config('CASSANDRA_KEYSPACE', default='stellarmapweb')
ASTRA_DB_TOKEN = config('ASTRA_DB_TOKEN', default='')
# CASSANDRA_FALLBACK_ORDER_BY_PYTHON = True  # Disabled - causes TypeError with None value comparisons

# Path to secure connect bundle
SECURE_CONNECT_BUNDLE_PATH = BASE_DIR.parent / 'secure-connect-stellarmapwebastradb.zip'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apiApp',
    'radialTidyTreeApp',
    'webApp',
]

# Conditionally add Cassandra support if ASTRA_DB_TOKEN is provided
if ASTRA_DB_TOKEN:
    INSTALLED_APPS.insert(0, 'django_cassandra_engine')  # Must be first for Cassandra support

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Conditionally add Cassandra database if ASTRA_DB_TOKEN is provided
if ASTRA_DB_TOKEN:
    DATABASES['cassandra'] = {
        'ENGINE': 'django_cassandra_engine',
        'NAME': CASSANDRA_KEYSPACE,
        'USER': 'token',  # Literal string 'token' for Astra DB
        'PASSWORD': ASTRA_DB_TOKEN,  # Your Astra token
        'OPTIONS': {
            'connection': {
                'cloud': {
                    'secure_connect_bundle': str(SECURE_CONNECT_BUNDLE_PATH)
                },
                'retry_connect': True,
                'protocol_version': 4,
            }
        }
    }

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Only use clickjacking protection in deployments because the Development Web View uses
# iframes and needs to be a cross origin.
if ("REPLIT_DEPLOYMENT" in os.environ):
    MIDDLEWARE.append('django.middleware.clickjacking.XFrameOptionsMiddleware')

ROOT_URLCONF = 'StellarMapWeb.urls'

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [BASE_DIR / 'templates'],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
            'django.template.context_processors.debug',
            'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages'
        ]
    }
}]

WSGI_APPLICATION = 'StellarMapWeb.wsgi.application'

# REST_FRAMEWORK configuration removed since rest_framework is not installed

import logging

# Configure logging to reduce Cassandra DEBUG verbosity
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG' if DEBUG else 'INFO',
    },
    'loggers': {
        # Reduce Cassandra driver verbosity to prevent flooding stderr
        'cassandra': {
            'handlers': ['console'],
            'level': 'WARNING',  # Only show WARNING and ERROR, not DEBUG/INFO
            'propagate': False,
        },
        'cassandra.cluster': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
        'cassandra.connection': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
        'cassandra.cqlengine.connection': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
        'cassandra.pool': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
        'cassandra.io.libevreactor': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
        'cassandra.protocol_features': {
            'handlers': ['console'],
            'level': 'WARNING',
            'propagate': False,
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR.parent / 'static'
STATICFILES_DIRS = []

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
