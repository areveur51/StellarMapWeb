@startuml HVA Ranking System

skinparam backgroundColor #261D45
skinparam defaultFontColor #96DDF2

skinparam participant {
  BackgroundColor #100D23
  BorderColor #0BE784
  FontColor #96DDF2
}

skinparam actor {
  BackgroundColor #0BE784
  BorderColor #0BE784
  FontColor #100D23
}

skinparam database {
  BackgroundColor #100D23
  BorderColor #0BE784
  FontColor #96DDF2
}

skinparam note {
  BackgroundColor #231B3D
  BorderColor #3f2c70
  FontColor #96DDF2
}

skinparam sequence {
  ArrowColor #01C176
  LifeLineBorderColor #0BE784
  LifeLineBackgroundColor #100D23
  DividerBackgroundColor #100D23
  DividerBorderColor #0BE784
  DividerFontColor #0BE784
  DividerFontSize 14
  DividerFontStyle bold
}

title <color:#0BE784>High Value Account (HVA) Ranking & Change Tracking System

actor User as user #0BE784
participant "Django Server" as django
participant "BigQuery Pipeline" as pipeline
participant "HVARankingHelper" as helper
database "Astra DB\n(Cassandra)" as cassandra
participant "HVA Leaderboard\nView" as view

== <color:#0BE784>Initial Setup: Backfill Rankings ==

user -[#01C176]-> django: python manage.py\nrecalculate_hva_rankings
activate django
django -[#01C176]-> cassandra: Query all accounts\nWHERE xlm_balance > 1M
cassandra -[#01C176]-> django: HVA accounts
django -[#01C176]-> helper: get_current_rankings(network)
activate helper
helper -[#01C176]-> helper: Sort by XLM balance DESC
helper -[#01C176]-> django: Rankings (1-1000)
deactivate helper

loop For each HVA account
    django -[#01C176]-> cassandra: Check for existing\nchange events
    alt No existing events
        django -[#01C176]-> cassandra: Create HVAStandingChange\nevent_type=ENTERED
        note right #231B3D
            <color:#96DDF2>Records initial entry
            <color:#96DDF2>into top 1000
        end note
    end
end

django -[#01C176]-> user: Backfill complete\n(X events created)
deactivate django

== <color:#0BE784>Continuous Tracking: Pipeline Updates ==

pipeline -[#01C176]-> cassandra: Update account balance\n(old_balance ‚Üí new_balance)
activate pipeline

pipeline -[#01C176]-> helper: detect_and_record_change(\naccount, old_balance, new_balance)
activate helper

helper -[#01C176]-> helper: Calculate old_rank\nfrom old_balance
helper -[#01C176]-> helper: Calculate new_rank\nfrom new_balance

alt Significant change detected
    helper -[#01C176]-> helper: Determine event_type:\n<color:#96DDF2>‚Ä¢ ENTERED (NULL ‚Üí rank)\n<color:#96DDF2>‚Ä¢ EXITED (rank ‚Üí NULL)\n<color:#96DDF2>‚Ä¢ RANK_UP (rank improved ‚â•10)\n<color:#96DDF2>‚Ä¢ RANK_DOWN (rank dropped ‚â•10)\n<color:#96DDF2>‚Ä¢ BALANCE_INCREASE (‚â•5%)\n<color:#96DDF2>‚Ä¢ BALANCE_DECREASE (‚â•5%)
    
    helper -[#01C176]-> cassandra: Create HVAStandingChange
    note right #231B3D
        <color:#0BE784>Event includes:
        <color:#96DDF2>‚Ä¢ stellar_account
        <color:#96DDF2>‚Ä¢ change_time (TimeUUID)
        <color:#96DDF2>‚Ä¢ event_type
        <color:#96DDF2>‚Ä¢ old_rank, new_rank
        <color:#96DDF2>‚Ä¢ old_balance, new_balance
        <color:#96DDF2>‚Ä¢ rank_change (calculated)
        <color:#96DDF2>‚Ä¢ balance_change_pct (calculated)
    end note
    
    helper -[#01C176]-> pipeline: Change event created
else No significant change
    helper -[#01C176]-> pipeline: NULL (no event)
end

deactivate helper
pipeline -[#01C176]-> pipeline: Continue pipeline
deactivate pipeline

== <color:#0BE784>User Views Leaderboard ==

user -[#01C176]-> view: GET /high-value-accounts
activate view

view -[#01C176]-> cassandra: Query all accounts\nWHERE xlm_balance > 1M\nORDER BY xlm_balance DESC
cassandra -[#01C176]-> view: Sorted HVA list

view -[#01C176]-> view: Calculate cutoff_time\n(24 hours ago)

loop For each account
    view -[#01C176]-> cassandra: Query HVAStandingChange\nWHERE stellar_account = X\nAND created_at >= cutoff_time\nLIMIT 1
    cassandra -[#01C176]-> view: Most recent change event
    
    alt Change event found
        view -[#01C176]-> view: Enrich account:\n<color:#96DDF2>‚Ä¢ rank_change_24h\n<color:#96DDF2>‚Ä¢ rank_change_direction\n<color:#96DDF2>‚Ä¢ is_new_entry
        note right #231B3D
            <color:#0BE784>UI displays:
            <color:#96DDF2>üîº +5 (rank improved)
            <color:#96DDF2>üîΩ -2 (rank dropped)
            <color:#96DDF2>‚≠ê NEW (entered top 1000)
            <color:#96DDF2>+12.5% (balance increased)
        end note
    end
end

view -[#01C176]-> user: Rendered leaderboard\nwith change indicators
deactivate view

== <color:#0BE784>Storage Efficiency ==

note over cassandra #231B3D
    <color:#0BE784>**Event-Based Tracking**
    <color:#96DDF2>Only stores CHANGES, not snapshots
    
    <color:#96DDF2>Traditional snapshot approach:
    <color:#96DDF2>‚Ä¢ 1,000 accounts √ó 24 snapshots/day = 24,000 records/day
    
    <color:#0BE784>Event-based approach:
    <color:#96DDF2>‚Ä¢ Only ~50 accounts change significantly/day
    <color:#0BE784>‚Ä¢ **480x storage reduction**
    
    <color:#96DDF2>Event retention enables:
    <color:#96DDF2>‚Ä¢ Historical rank trend analysis
    <color:#96DDF2>‚Ä¢ Leaderboard volatility metrics
    <color:#96DDF2>‚Ä¢ Account trajectory insights
end note

@enduml
