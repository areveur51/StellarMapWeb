@startuml System Overview

skinparam backgroundColor #261D45
skinparam defaultFontColor #96DDF2

skinparam component {
  BackgroundColor #100D23
  BorderColor #0BE784
  FontColor #96DDF2
  ArrowColor #01C176
}

skinparam cloud {
  BackgroundColor #100D23
  BorderColor #0BE784
  FontColor #96DDF2
}

skinparam database {
  BackgroundColor #100D23
  BorderColor #0BE784
  FontColor #96DDF2
}

skinparam package {
  BackgroundColor #231B3D
  BorderColor #3f2c70
  FontColor #96DDF2
}

skinparam actor {
  BackgroundColor #0BE784
  BorderColor #0BE784
  FontColor #100D23
}

skinparam note {
  BackgroundColor #231B3D
  BorderColor #3f2c70
  FontColor #96DDF2
}

title <color:#0BE784>System Overview</color>

actor User #0BE784

package "Frontend Layer" #231B3D {
  component "Vue.js + D3.js\nVisualization" as Frontend
}

package "Django Application" #231B3D {
  component "webApp" as WebApp
  component "apiApp" as ApiApp
  component "radialTidyTreeApp" as RadialApp
}

package "Background Services" #231B3D {
  component "Cron Worker\n(run_cron_jobs.py)" as CronWorker
  component "8-Stage Pipeline\n(2-3 min processing)" as Pipeline
}

cloud "External APIs" #231B3D {
  component "Horizon API" as Horizon
  component "Stellar Expert" as Expert
}

database "Astra DB\n(Cassandra)" as DB

User -[#01C176]-> Frontend : "Views"
Frontend -[#01C176]-> WebApp : "HTTP"
WebApp -[#01C176]-> ApiApp : "API Calls"
ApiApp -[#01C176]-> DB : "Queries\n(88% optimized)"
CronWorker -[#01C176]-> Pipeline : "Orchestrates"
Pipeline -[#01C176]-> Horizon : "Fetches Data"
Pipeline -[#01C176]-> Expert : "Enrichment"
Pipeline -[#01C176]-> DB : "Stores"

note right of DB #231B3D
  <color:#0BE784>Query Optimization:</color>
  <color:#96DDF2>• 204 → 24 queries/min
  • 88% reduction
  • Using status__in=[...]</color>
end note

@enduml
